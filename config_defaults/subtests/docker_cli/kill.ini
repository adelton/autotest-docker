[docker_cli/kill]
docker_timeout = 60
#: how long to wait before using the container
wait_start = 3
#: modifies the ``docker run`` options
run_options_csv = --attach=stdout
subsubtests = random_num,random_num_ttyoff,random_name,random_name_ttyoff,go_lang_bad_signals,go_lang_bad_signals_ttyoff,run_sigproxy,run_sigproxy_ttyoff,attach_sigproxy,attach_sigproxy_ttyoff
#: which signals should not be used (uncatchable signals)
skip_signals = 9 17 19 27
#: checking output produced by signal
check_stdout = Received %%s, ignoring...
#: range of used signals
kill_signals = 1 31
#: how many iterations
no_iterations = 100
#: map signal numbers to names (RANDOM,true,false)
kill_map_signals = false
#: maximal acceptable delay caused by stress command
stress_cmd_timeout = 5
#: modifies the container command
exec_cmd = 'for NUM in `seq 1 64`; do trap "echo Received $NUM, ignoring..." $NUM; done; while :; do sleep 0.1; done'
#: allows you to force given sequence of signals
signals_sequence =
#: used kill command (``false`` -> ``docker kill $name``;
#: `true`` -> ``os.kill $docker_cmd.pid``
kill_sigproxy =
#: execute detacched container and attach it in separate process
run_container_attached = false
#: Additional options to pass when attaching to backgrounded container process
attach_options_csv =

[docker_cli/kill/random_num]
# docker kill
# signals_sequence = L 1 27 4 L 12 19 15 21 L 18 L 5 16 21 19 21 13 2 L 28

[docker_cli/kill/random_name]
kill_map_signals = true
# signals_sequence = M 4 M L 11 M 20 M L 21 M 6 M L 30 M 22 M L 25 M L 1 M

[docker_cli/kill/random_name_ttyoff]
kill_map_signals = true

[docker_cli/kill/go_lang_bad_signals]
# docker kill
kill_sigproxy = true
skip_signals = 9
signals_sequence = 17 19 18 27
stress_cmd_timeout = 3
#: ``grep`` regexp matching the info in ``docker man run`` about noncatchable
#: signals
man_regexp = SIGCHLD.*SIGSTOP.*SIGKILL

[docker_cli/kill/go_lang_bad_signals_ttyoff]
kill_sigproxy = true
skip_signals = 9
signals_sequence = 2 19 20 27

[docker_cli/kill/run_sigproxy]
# --sig-proxy + os.kill() test
kill_sigproxy = true
run_options_csv = --attach=stdout,--sig-proxy=true
# signals_sequence = 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 18 19 18 20 21 22 23 24 25 26 27 28 29 30 31

[docker_cli/kill/run_sigproxy_ttyoff]
kill_sigproxy = true
run_options_csv = --attach=stdout,--sig-proxy=true

[docker_cli/kill/attach_sigproxy]
# --sig-proxy + os.kill() test
kill_sigproxy = true
run_container_attached = true
run_options_csv = --detach=true,--sig-proxy=true
attach_options_csv = --sig-proxy=true
# signals_sequence = 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 18 19 18 20 21 22 23 24 25 26 27 28 29 30 31

[docker_cli/kill/attach_sigproxy_ttyoff]
kill_sigproxy = true
run_container_attached = true
run_options_csv = --detach=true,--sig-proxy=true
attach_options_csv = --sig-proxy=true

[docker_cli/kill/run_sigproxy_stress]
# --sig-proxy + os.kill() test
kill_sigproxy = true
run_container_attached = true
run_options_csv = --detach=true,--sig-proxy=true
attach_options_csv = --sig-proxy=true
# signals_sequence = 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 18 19 18 20 21 22 23 24 25 26 27 28 29 30 31

[docker_cli/kill/run_sigproxy_stress_ttyoff]
kill_sigproxy = true
run_container_attached = true
run_options_csv = --detach=true,--sig-proxy=true
attach_options_csv = --sig-proxy=true
