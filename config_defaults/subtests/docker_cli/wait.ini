[docker_cli/wait]
subsubtests = Simple, Multi, Sig

#: CSV list of strings describing how containers are setup, "CREATE", "RUN"
#: or "NONE".  Each value represents a separate container and all ``target_*``
#: lists must contain exactly the same number of items.
target_setups = RUN

#: CSV list of operations to perform on each container during the test
#: wait command:
#: {n}
#: {t}  * ``STOP`` - Use ``docker stop`` on the target container
#: {t}  * ``KILL`` - Use ``docker kill`` on the target container
#: {t}  * ``<n>`` - Send signal number ``<n>`` to target container
#: {t}  * ``REMV`` - Use ``docker rm --force`` on the target container
#: {t}  * ``NONE`` - Do nothing
#: {n}
target_waits = NONE

#: CSV list of sleep times for each target, must have same number of items
#: as ``target_setups`` and ``target_waits``.  Do not rely on timing for
#: precise synchronization!
target_sleeps = 0.5

#: Expected exit code from wait command
exit = 0

#: (optional) Regular expression that much match wait command stdout
stdout = ^0\n$

#: (optional) Regular expression that much match wait command stderr
stderr =

#: Timeout for the target docker command in seconds
target_timeout = 10

#: Timeout for the wait command itself
docker_timeout = 20

#: Quoted command line to pass to each target container
target_cmd = bash,-c,'trap "echo \"Received Signal 30\"" 30; sleep @SLEEP@s'

#: CSV run command line options minus --name & image for each target container
target_run = --detach

#: Run target containers with more verbosity under all conditions
target_verbose = no

#: Run wait command with more verbosity
wait_verbose = no

[docker_cli/wait/Multi]
docker_timeout = 20
target_setups = RUN, RUN, RUN
target_waits = NONE, KILL, NONE
target_sleeps = 1, 5, 3
stdout = ^0\n137\n0$

[docker_cli/wait/Sig]
docker_timeout = 20
target_setups = RUN
target_waits = 30
target_sleeps = 0.5
