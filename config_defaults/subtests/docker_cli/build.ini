[docker_cli/build]
# Test options
docker_build_options = --rm
# Either install it in /usr/sbin/busybox or provide http link
# busybox_url = http://www.busybox.net/downloads/binaries/latest/busybox-x86_64
source_dirs = full,part,bad
build_timeout_seconds = 120
subsubtests = local_path,https_file,git_path,rm_false,rm_false_nocache,bad,bad_quiet,bad_force_rm

[docker_cli/build/local_path]
dockerfile_path = /full

[docker_cli/build/https_file]
# Specify path to http/https based dockerfile (raw) e.g.:
# dockerfile_path = https://raw.githubusercontent.com/autotest/autotest-docker/Dockerfile
dockerfile_path =

[docker_cli/build/git_path]
# Specify path to git based dockerfile e.g.:
# dockerfile_path = github.com/autotest/autotest-docker.git
dockerfile_path =

[docker_cli/build/rm_false]
dockerfile_path = /part
dockerfile_path2 = /full
# How many unique steps are in full vs. part
dockerfile_new_containers = 2
# How many steps are there in full
dockerfile_all_containers = 6
docker_build_options2 = --rm=false

[docker_cli/build/rm_false_nocache]
dockerfile_path = /part
dockerfile_path2 = /full
# How many unique steps are in full vs. part
dockerfile_new_containers = 6
# How many steps are there in full
dockerfile_all_containers = 6
docker_build_options2 = --rm=false --no-cache=true

[docker_cli/build/bad]
dockerfile_path = /bad
docker_build_fail_msg = exec: "this_shoud_fail": executable file not found in $PATH
docker_build_intermediary_containers = LAST
dockerfile_new_containers = 1
dockerfile_all_containers = 7
docker_build_stdout = ^Ho ho ho!$

[docker_cli/build/bad_force_rm]
dockerfile_path = /bad
docker_build_options = --force-rm
docker_build_fail_msg = exec: "this_shoud_fail": executable file not found in $PATH
docker_build_stdout = ^Ho ho ho!$

[docker_cli/build/bad_quiet]
dockerfile_path = /bad
docker_build_options = --rm --quiet
docker_build_fail_msg = exec: "this_shoud_fail": executable file not found in $PATH
docker_build_intermediary_containers = LAST
dockerfile_new_containers = 1
dockerfile_all_containers = 7
docker_build_no_stdout = ^Ho ho ho!$
